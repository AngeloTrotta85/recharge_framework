//
// Generated file, do not edit! Created by nedtool 5.0 from inet/applications/base/ApplicationPacketRecharge.msg.
//

#ifndef __INET_APPLICATIONPACKETRECHARGE_M_H
#define __INET_APPLICATIONPACKETRECHARGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
#include "inet/networklayer/common/L3Address.h"
#include "inet/common/geometry/common/Coord.h"
#include <list>
// }}


namespace inet {

/**
 * Class generated from <tt>inet/applications/base/ApplicationPacketRecharge.msg:28</tt> by nedtool.
 * <pre>
 * packet ApplicationPacketRecharge
 * {
 *     long sequenceNumber;
 *     L3Address addr;
 *     int appAddr;
 *     Coord pos;
 *     double batteryLevelAbs;
 *     double batteryLevelPerc;
 * }
 * </pre>
 */
class ApplicationPacketRecharge : public ::omnetpp::cPacket
{
  protected:
    long sequenceNumber;
    L3Address addr;
    int appAddr;
    Coord pos;
    double batteryLevelAbs;
    double batteryLevelPerc;

  private:
    void copy(const ApplicationPacketRecharge& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ApplicationPacketRecharge&);

  public:
    ApplicationPacketRecharge(const char *name=nullptr, int kind=0);
    ApplicationPacketRecharge(const ApplicationPacketRecharge& other);
    virtual ~ApplicationPacketRecharge();
    ApplicationPacketRecharge& operator=(const ApplicationPacketRecharge& other);
    virtual ApplicationPacketRecharge *dup() const {return new ApplicationPacketRecharge(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual long getSequenceNumber() const;
    virtual void setSequenceNumber(long sequenceNumber);
    virtual L3Address& getAddr();
    virtual const L3Address& getAddr() const {return const_cast<ApplicationPacketRecharge*>(this)->getAddr();}
    virtual void setAddr(const L3Address& addr);
    virtual int getAppAddr() const;
    virtual void setAppAddr(int appAddr);
    virtual Coord& getPos();
    virtual const Coord& getPos() const {return const_cast<ApplicationPacketRecharge*>(this)->getPos();}
    virtual void setPos(const Coord& pos);
    virtual double getBatteryLevelAbs() const;
    virtual void setBatteryLevelAbs(double batteryLevelAbs);
    virtual double getBatteryLevelPerc() const;
    virtual void setBatteryLevelPerc(double batteryLevelPerc);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ApplicationPacketRecharge& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ApplicationPacketRecharge& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_APPLICATIONPACKETRECHARGE_M_H

