[General]
network = Net80211test
#record-eventlog = true
#eventlog-message-detail-pattern = *:(not declaredOn(cMessage) and not declaredOn(cNamedObject) and not declaredOn(cObject))

num-rngs = 3
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2
#debug-on-errors = true


**.statistic-recording = false
**.scalar-recording = false
**.vector-recording = false

tkenv-plugin-path = ../../../etc/plugins

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m

# mobility
**.host*.mobilityType = "VirtualSpringMobility"
**.host*.mobility.initialX = normal(300m, 50m)
**.host*.mobility.initialY = normal(200m, 50m)
**.host*.mobility.initFromDisplayString = false
**.host*.mobility.updateInterval = 100ms
**.host*.mobility.defaultStiffness = 0.5

*.numHosts = 4

# ping app (host[0] pinged by others)
*.host[*].numUdpApps = 1
*.host[*].udpApp[*].typename = "UDPBasicRecharge"

**.udpApp[0].localPort = 100
**.udpApp[0].destPort = 100
#**.udpApp[0].messageLength = 1250B
**.udpApp[0].messageLength = 512B
#**.udpApp[0].sendInterval = 1s
**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].destAddresses = "255.255.255.255"
**.udpApp[0].localAddress = ""
**.udpApp[0].receiveBroadcast = true
#**.udpApp[0].startTime = truncnormal(5s, 1s)
**.udpApp[0].startTime = 0s


**.host[*].networkLayerType = "IPv4ExtNetworkLayer"
**.host[*].udpType = "UDPExt"

**.ip.forceBroadcast = true

# nic settings
**.wlan[*].bitrate = 2Mbps

**.wlan[*].mgmt.frameCapacity = 10

**.wlan[*].mac.address = "auto"
**.wlan[*].mac.maxQueueSize = 14
**.wlan[*].mac.rtsThresholdBytes = 3000B
**.wlan[*].mac.retryLimit = 7
**.wlan[*].mac.cwMinData = 7
**.wlan[*].mac.cwMinBroadcast = 31

**.wlan[*].macType = "Ieee80211MacExt"
**.wlan[*].mgmtType = "Ieee80211MgmtAdhocExt"

**.wlan[*].radio.transmitter.power = 100mW
**.wlan[*].radio.receiver.sensitivity = -85dBm
**.wlan[*].radio.receiver.snirThreshold = 4dB

**.wlan[*].radio.receiverType = "Ieee80211ScalarReceiverExt"

**.udpApp[0].isCentralized = true
#**.host[*].battery.initialCapacity = normal(700J, 50J)
**.host[*].battery.nominalCapacity = 1000000J
**.host[*].battery.initialCapacity = 100000J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.swapHeightFactor = 0J
**.host[*].battery.flightHeight = 20m
**.udpApp[0].chargingStationNumber = 1
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"
#**.udpApp[0].schedulingType = "STIMULUS"

[Config TestBase]
description = "TestBase"

**.udpApp[0].*.scalar-recording = true
**.udpApp[0].*.vector-recording = true
**.host[*].battery.*.scalar-recording = true
**.host[*].battery.*.vector-recording = true

*.numHosts = 15

**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 400m

**.host*.mobility.defaultStiffness = 0.5

**.udpApp[0].sendInterval = truncnormal(1s, 0.02s)
**.udpApp[0].startTime = 0s

**.udpApp[0].isCentralized = true
#**.host[*].battery.initialCapacity = normal(700J, 50J)
**.host[*].battery.nominalCapacity = 10000000J
**.host[*].battery.initialCapacity = 120000J
**.host[*].battery.dischargingFactor = 100W
**.host[*].battery.chargingFactor = 25W
**.host[*].battery.swapHeightFactor = 100J
**.host[*].battery.flightHeight = 0m
**.udpApp[0].chargingStationNumber = 3
**.udpApp[0].checkRechargeTimer = 20s
**.udpApp[0].schedulingType = "ANALYTICAL"
#**.udpApp[0].schedulingType = "ROUNDROBIN"
#**.udpApp[0].schedulingType = "STIMULUS"

**.udpApp[0].numRechargeSlotsProbabilistic = 10
**.udpApp[0].roundrobinRechargeSize = 1

**.udpApp[0].godCheckIfRechargeStationFree = false
**.udpApp[0].makeLowEnergyFactorCurves = true
**.udpApp[0].timeFactorMultiplier = 2

output-vector-file = ${resultdir}/${configname}/${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${runnumber}.sca

[Config TestALL]
extends = TestBase
description = "TestALL"

repeat = 5

**.udpApp[0].schedulingType = "${ST=ANALYTICAL, STIMULUS, ROUNDROBIN, ROUNDROBIN, ROUNDROBIN, PROBABILISTIC, PROBABILISTIC, PROBABILISTIC}"

**.udpApp[0].numRechargeSlotsProbabilistic = ${SP = 1, 1, 1, 1, 1, 1, 5, 10 ! ST}
**.udpApp[0].roundrobinRechargeSize = ${RRS = 1, 1, 1, 5, 10, 1, 1, 1 ! ST}

**.host[*].battery.flightHeight = ${FH = 0, 10, 25, 50, 75, 100}m

**.host[*].battery.initialCapacity = ${IC = 25000, 50000, 75000, 100000, 125000}J

*.numHosts = ${NO = 3,5,7,10,15, 6,10,14,20,30, 9,15,22,30,45, 15,25,35,50,75}
**.udpApp[0].chargingStationNumber = ${CSN = 1,1,1,1,1, 2,2,2,2,2, 3,3,3,3,3, 5,5,5,5,5 ! NO}


output-vector-file = ${resultdir}/${configname}/${NO}-${CSN}-${ST}-${SP}-${RRS}-${FH}-${IC}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${NO}-${CSN}-${ST}-${SP}-${RRS}-${FH}-${IC}-${runnumber}.sca

[Config TestAllCENTRALIZED]
extends = TestBase
description = "TestAllCENTRALIZED"

repeat = 1

**.udpApp[0].schedulingType = "${ST=ANALYTICAL, ROUNDROBIN, ROUNDROBIN, ROUNDROBIN}"

**.udpApp[0].numRechargeSlotsProbabilistic = ${SP = 1, 1, 1, 1 ! ST}
**.udpApp[0].roundrobinRechargeSize = ${RRS = 1, 1, 5, 10 ! ST}

**.host[*].battery.flightHeight = ${FH = 0, 10, 25, 50, 100}m

**.host[*].battery.initialCapacity = ${IC = 25000, 50000, 100000, 150000}J

*.numHosts = ${NO = 3,5,10,15, 6,10,20,30, 9,15,30,45, 15,25,50,75}
**.udpApp[0].chargingStationNumber = ${CSN = 1,1,1,1, 2,2,2,2, 3,3,3,3, 5,5,5,5 ! NO}


output-vector-file = ${resultdir}/${configname}/${NO}-${CSN}-${ST}-${SP}-${RRS}-${FH}-${IC}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${NO}-${CSN}-${ST}-${SP}-${RRS}-${FH}-${IC}-${runnumber}.sca

[Config TestAllDISTRIBUTED]
extends = TestBase
description = "TestAllDISTRIBUTED"

repeat = 10

**.udpApp[0].schedulingType = "${ST=STIMULUS, PROBABILISTIC, PROBABILISTIC, PROBABILISTIC}"

**.udpApp[0].numRechargeSlotsProbabilistic = ${SP = 1, 1, 5, 10 ! ST}
**.udpApp[0].roundrobinRechargeSize = ${RRS = 1, 1, 1, 1 ! ST}

**.host[*].battery.flightHeight = ${FH = 0, 10, 25, 50, 75, 100}m

**.host[*].battery.initialCapacity = ${IC = 25000, 50000, 100000, 150000}J

*.numHosts = ${NO = 3,5,10,15, 9,15,30,45, 15,25,50,75}
**.udpApp[0].chargingStationNumber = ${CSN = 1,1,1,1, 3,3,3,3, 5,5,5,5 ! NO}

#*.numHosts = ${NO = 3,5,10,15, 6,10,20,30, 9,15,30,45, 15,25,50,75}
#**.udpApp[0].chargingStationNumber = ${CSN = 1,1,1,1, 2,2,2,2, 3,3,3,3, 5,5,5,5 ! NO}


output-vector-file = ${resultdir}/${configname}/${NO}-${CSN}-${ST}-${SP}-${RRS}-${FH}-${IC}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${NO}-${CSN}-${ST}-${SP}-${RRS}-${FH}-${IC}-${runnumber}.sca

[Config TestAllDISTRIBUTED_test]
extends = TestBase
description = "TestAllDISTRIBUTED_test"

repeat = 10

**.udpApp[0].schedulingType = "${ST=STIMULUS}"

**.udpApp[0].numRechargeSlotsProbabilistic = ${SP = 1 ! ST}
**.udpApp[0].roundrobinRechargeSize = ${RRS = 1 ! ST}

**.host[*].battery.flightHeight = ${FH = 0}m

**.host[*].battery.initialCapacity = ${IC = 25000}J
#**.host[*].battery.initialCapacity = ${IC = 25000, 50000, 100000, 150000}J

*.numHosts = ${NO = 3}
**.udpApp[0].chargingStationNumber = ${CSN = 1 ! NO}

#*.numHosts = ${NO = 3,5,10,15, 6,10,20,30, 9,15,30,45, 15,25,50,75}
#**.udpApp[0].chargingStationNumber = ${CSN = 1,1,1,1, 2,2,2,2, 3,3,3,3, 5,5,5,5 ! NO}


output-vector-file = ${resultdir}/${configname}/${NO}-${CSN}-${ST}-${SP}-${RRS}-${FH}-${IC}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${NO}-${CSN}-${ST}-${SP}-${RRS}-${FH}-${IC}-${runnumber}.sca